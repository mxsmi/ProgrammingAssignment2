?solve
source("~/Desktop/R Projects/Foundations of Data Science/ProgrammingAssignment2/cachematrix.R", echo=TRUE)
?matrix
X = matrix(c(1, 0, 0,  0, 1, 0,  0, 0, 1), nrow = 3, ncol = 3, byrow = TRUE)
X
det(X)
makeCacheMatrix(X)
X$get()
x = makeCacheMatrix(X)
x$get()
x$getinverse()
cacheSolve(X)
cacheSolve(x)
class(x)
cacheSolve(x$get())
x$get()
class(x$get())
source("cachematrix.R")
X = matrix(c(1, 0, 0,  0, 1, 0,  0, 0, 1), nrow = 3, ncol = 3)
makeCacheMatrix(X)
x = makeCacheMatrix(X)
x$get()
x$getinverse()
x$set()
cacheSolve(x)
source("cachematrix.R")
cacheSolve(x)
cacheSolve(x)
x$getinverse()
newinverse = matrix(c(2, 0, 0,  0, 2, 0,  0, 0, 2), nrow = 3, ncol = 3)
x$setinverse(newinverse)
x$get()
x$getinverse()
cacheSolve(x)
m = matrix(c(3, 0, 0,  0, 3, 0, 0, 0, 3), nrow = 3, ncol = 3)
m
solve(m)
x$set(m)
x
x$get()
x$set()
x$setinverse()
x$getinverse()
cacheSolve(x)
cacheSolve(x)
